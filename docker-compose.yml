

version: '3.8'

x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  
  environment:
    AIRFLOW_UID: 50000
    AIRFLOW_HOME: /opt/airflow
    AIRFLOW_WEBSERVER_HOST: 0.0.0.0
    AIRFLOW_WEBSERVER_PORT: 8080
    AIRFLOW_EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${P_user}:${P_pass}@postgres:5432/${P_db}
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: ${User}
    _AIRFLOW_WWW_USER_PASSWORD: ${Pass}
    S_ACCOUNT: ${ACCOUNT}
    S_USER: ${USER}
    S_PASSWORD: ${PASSWORD}
    S_ROLE: ${ROLE}
    S_DATABASE: ${DATABASE}
    S_WAREHOUSE: ${WAREHOUSE}
    S_SCHEMA: ${SCHEMA}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./dbt_project:/opt/airflow/dbt_project
    - ./logs:/opt/airflow/logs

  

services:


  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${P_user}
      - POSTGRES_DB=${P_db}
      - POSTGRES_PASSWORD=${P_pass}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", $${P_user}]
      interval: 5s
      timeout: 5s
      retries: 5
  
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    command: ["airflow", "db", "migrate"] 
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: ["airflow", "webserver"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
  
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: ["airflow", "scheduler"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
